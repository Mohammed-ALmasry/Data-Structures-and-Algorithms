#include <bits/stdc++.h>
#define oo 0x7fffffff
using namespace std;
typedef pair< int,int > pii;
vector< vector < pair<int,int> > > g(100100);
int n,m;
vector<int> d(100100,oo);
vector<int> par(100100);
void dijkstra(int s)
{
    d[s]=0;
    priority_queue<pair<int,int> ,vector<pair<int,int > > , greater< pair< int,int > > > pq;
    pq.push({0,s});
    while(!pq.empty())
    {
    pii front=pq.top();
    pq.pop();
    int curd=front.first,cur=front.second;
    if(curd>d[cur]) continue;
    for(int i=0;i<g[cur].size();i++)
    {
        pii nextv;nextv.first=g[cur][i].first;nextv.second=g[cur][i].second;
        if(d[cur]+nextv.second<d[nextv.first])
         d[nextv.first]=d[cur]+nextv.second,par[nextv.first]=cur,pq.push({d[nextv.first],nextv.first});
    }
    }
}
int main()
{
    cin>>n>>m;
    int x,y,z;
    g.resize(n+1);
    for(int i=0;i<m;i++)
    {
        cin>>x>>y>>z;
        g[x].push_back(make_pair(y,z));
        g[y].push_back(make_pair(x,z));
    }
   dijkstra(1);
   for(int i=1;i<=n;i++)
    cout<<d[i]<<" ";
   for(int i=1;i<=n;i++)
    cout<<par[i]<<" ";
}
}
/*
input:
>>>>>>>>>>>>>>>>>>>>>>>>>>>
>          5              >
>                         >
> 6               4       >
>                         > 
>          3              >
>                         >
> 1               2       >
>>>>>>>>>>>>>>>>>>>>>>>>>>> 
6 9
1 2 7
1 3 9
1 6 14
2 4 15
2 3 10
3 4 11
3 6 2
6 5 9
5 4 6
*/
output: 0 7 9 20 20 11